name: CI/CD Pipeline

on:
  push:
    branches:
      - master

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      # Step 1: Checkout the code
      - name: Checkout code
        uses: actions/checkout@v3

      # Step 2: Set up Java 21 (matches Maven enforcer)
      - name: Set up Java
        uses: actions/setup-java@v3
        with:
          java-version: '21'
          distribution: 'temurin'

      # Step 3: Increment patch version
      - name: Increment patch version
        id: version
        run: |
          CURRENT_VERSION=$(mvn help:evaluate -Dexpression=project.version -q -DforceStdout)
          IFS='.' read -r MAJOR MINOR PATCH <<< "$CURRENT_VERSION"
          PATCH=$((PATCH + 1))
          NEW_VERSION="$MAJOR.$MINOR.$PATCH"
          mvn versions:set -DnewVersion=$NEW_VERSION
          echo "new_version=$NEW_VERSION" >> $GITHUB_OUTPUT

      # Step 4: Build the JAR
      - name: Build JAR
        run: mvn clean package

      # Step 5: Show the new version
      - name: Show new version
        run: echo "New version: ${{ steps.version.outputs.new_version }}"

      # Step 6: Log in to DockerHub
      - name: Log in to DockerHub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      # Step 7: Build Docker image
      - name: Build Docker image
        run: docker build -t ${{ secrets.DOCKER_USERNAME }}/simple-java-maven-app:${{ steps.version.outputs.new_version }} .

      # Step 8: Push Docker image
      - name: Push Docker image
        run: docker push ${{ secrets.DOCKER_USERNAME }}/simple-java-maven-app:${{ steps.version.outputs.new_version }}
